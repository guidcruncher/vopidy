/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
RouteRecordInfo
} from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/browse-radiobrowser': RouteRecordInfo<'/browse-radiobrowser', '/browse-radiobrowser', Record<never, never>, Record<never, never>>,
    '/browse-spotify': RouteRecordInfo<'/browse-spotify', '/browse-spotify', Record<never, never>, Record<never, never>>,
    '/browse-tunein': RouteRecordInfo<'/browse-tunein', '/browse-tunein', Record<never, never>, Record<never, never>>,
    '/discover': RouteRecordInfo<'/discover', '/discover', Record<never, never>, Record<never, never>>,
    '/library': RouteRecordInfo<'/library', '/library', Record<never, never>, Record<never, never>>,
    '/mixerdesk': RouteRecordInfo<'/mixerdesk', '/mixerdesk', Record<never, never>, Record<never, never>>,
    '/queue': RouteRecordInfo<'/queue', '/queue', Record<never, never>, Record<never, never>>,
    '/search': RouteRecordInfo<'/search', '/search', Record<never, never>, Record<never, never>>,
    '/settings': RouteRecordInfo<'/settings', '/settings', Record<never, never>, Record<never, never>>,
    '/streams': RouteRecordInfo<'/streams', '/streams', Record<never, never>, Record<never, never>>,
    '/users': RouteRecordInfo<'/users', '/users', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/browse-radiobrowser.vue': {
      routes: '/browse-radiobrowser'
      views: never
    }
    'src/pages/browse-spotify.vue': {
      routes: '/browse-spotify'
      views: never
    }
    'src/pages/browse-tunein.vue': {
      routes: '/browse-tunein'
      views: never
    }
    'src/pages/discover.vue': {
      routes: '/discover'
      views: never
    }
    'src/pages/library.vue': {
      routes: '/library'
      views: never
    }
    'src/pages/mixerdesk.vue': {
      routes: '/mixerdesk'
      views: never
    }
    'src/pages/queue.vue': {
      routes: '/queue'
      views: never
    }
    'src/pages/search.vue': {
      routes: '/search'
      views: never
    }
    'src/pages/settings.vue': {
      routes: '/settings'
      views: never
    }
    'src/pages/streams.vue': {
      routes: '/streams'
      views: never
    }
    'src/pages/users.vue': {
      routes: '/users'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
